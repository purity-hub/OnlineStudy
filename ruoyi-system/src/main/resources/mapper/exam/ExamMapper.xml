<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.exam.mapper.ExamMapper">

    <resultMap type="Exam" id="ExamResult">
        <result property="id"    column="id"    />
        <result property="name"    column="name"    />
        <result property="courseId"    column="course_id"    />
        <result property="startTime"    column="start_time"    />
        <result property="endTime"    column="end_time"    />
        <result property="createTime"    column="create_time"    />
        <result property="createBy"    column="create_by"    />
    </resultMap>

    <resultMap id="ExamQuestionResult" type="Exam" extends="ExamResult">
        <collection property="questionList" notNullColumn="sub_id" javaType="java.util.List" resultMap="QuestionResult" />
    </resultMap>

    <resultMap type="Question" id="QuestionResult">
        <result property="id"    column="sub_id"    />
        <result property="examId"    column="sub_exam_id"    />
        <result property="questionType"    column="sub_question_type"    />
        <result property="context"    column="sub_context"    />
        <result property="answer"    column="sub_answer"    />
        <result property="selectA"    column="sub_select_a"    />
        <result property="selectB"    column="sub_select_b"    />
        <result property="selectC"    column="sub_select_c"    />
        <result property="selectD"    column="sub_select_d"    />
        <result property="score"    column="sub_score"    />
    </resultMap>

    <sql id="selectExamVo">
        select id, name, course_id, start_time, end_time, create_time, create_by from exam
    </sql>

    <select id="selectExamList" parameterType="Exam" resultMap="ExamResult">
        <include refid="selectExamVo"/>
        <where>
            <if test="name != null  and name != ''"> and name like concat('%', #{name}, '%')</if>
            <if test="courseId != null "> and course_id = #{courseId}</if>
            <if test="startTime != null "> and start_time = #{startTime}</if>
            <if test="endTime != null "> and end_time = #{endTime}</if>
        </where>
    </select>

    <select id="selectExamById" parameterType="Long" resultMap="ExamQuestionResult">
        select a.id, a.name, a.course_id, a.start_time, a.end_time, a.create_time, a.create_by,
               b.id as sub_id, b.exam_id as sub_exam_id, b.question_type as sub_question_type, b.context as sub_context, b.answer as sub_answer, b.select_a as sub_select_a, b.select_b as sub_select_b, b.select_c as sub_select_c, b.select_d as sub_select_d,b.score as sub_score
        from exam a
                 left join question b on b.exam_id = a.id
        where a.id = #{id}
    </select>

    <select id="selectExamNoAnsById" parameterType="Long" resultMap="ExamQuestionResult">
        select a.id, a.name, a.course_id, a.start_time, a.end_time, a.create_time, a.create_by,
               b.id as sub_id, b.exam_id as sub_exam_id, b.question_type as sub_question_type, b.context as sub_context, b.select_a as sub_select_a, b.select_b as sub_select_b, b.select_c as sub_select_c, b.select_d as sub_select_d,b.score as sub_score
        from exam a
                 left join question b on b.exam_id = a.id
        where a.id = #{id}
    </select>
    <select id="selectIsSubmit" resultType="java.lang.Integer">
        select count(*) from es where eid = #{eid} and sid = #{sid}
    </select>
    <select id="selectExamMyAnsById" resultType="com.ruoyi.es.domain.Es">
        select * from es where eid = #{eid} and sid = #{sid}
    </select>


    <insert id="insertExam" parameterType="Exam" useGeneratedKeys="true" keyProperty="id">
        insert into exam
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null">name,</if>
            <if test="courseId != null">course_id,</if>
            <if test="startTime != null">start_time,</if>
            <if test="endTime != null">end_time,</if>
            create_time,
            <if test="createBy != null">create_by,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null">#{name},</if>
            <if test="courseId != null">#{courseId},</if>
            <if test="startTime != null">#{startTime},</if>
            <if test="endTime != null">#{endTime},</if>
            sysdate(),
            <if test="createBy != null">#{createBy},</if>
        </trim>
    </insert>

    <update id="updateExam" parameterType="Exam">
        update exam
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null">name = #{name},</if>
            <if test="courseId != null">course_id = #{courseId},</if>
            <if test="startTime != null">start_time = #{startTime},</if>
            <if test="endTime != null">end_time = #{endTime},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteExamById" parameterType="Long">
        delete from exam where id = #{id}
    </delete>

    <delete id="deleteExamByIds" parameterType="String">
        delete from exam where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <delete id="deleteQuestionByExamIds" parameterType="String">
        delete from question where exam_id in
        <foreach item="examId" collection="array" open="(" separator="," close=")">
            #{examId}
        </foreach>
    </delete>

    <delete id="deleteQuestionByExamId" parameterType="Long">
        delete from question where exam_id = #{examId}
    </delete>

    <insert id="batchQuestion">
        insert into question( id, exam_id, question_type, context, answer, select_a, select_b, select_c, select_d,score) values
        <foreach item="item" index="index" collection="list" separator=",">
            ( #{item.id}, #{item.examId}, #{item.questionType}, #{item.context}, #{item.answer}, #{item.selectA}, #{item.selectB}, #{item.selectC}, #{item.selectD}, #{item.score})
        </foreach>
    </insert>
</mapper>
